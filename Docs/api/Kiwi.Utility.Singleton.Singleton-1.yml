### YamlMime:ManagedReference
items:
- uid: Kiwi.Utility.Singleton.Singleton`1
  commentId: T:Kiwi.Utility.Singleton.Singleton`1
  id: Singleton`1
  parent: Kiwi.Utility.Singleton
  children:
  - Kiwi.Utility.Singleton.Singleton`1.#ctor
  - Kiwi.Utility.Singleton.Singleton`1.Exists
  - Kiwi.Utility.Singleton.Singleton`1.GetInstance
  - Kiwi.Utility.Singleton.Singleton`1.Instance
  - Kiwi.Utility.Singleton.Singleton`1.IsInitialized
  - Kiwi.Utility.Singleton.Singleton`1.OnSingletonInitialize
  - Kiwi.Utility.Singleton.Singleton`1.OnSingletonRelease
  - Kiwi.Utility.Singleton.Singleton`1.OnSingletonReset
  - Kiwi.Utility.Singleton.Singleton`1.canResetSingleton
  langs:
  - csharp
  - vb
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: Kiwi.Utility.Singleton.Singleton<T>
  type: Class
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: Singleton
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 10
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 单例基类
  example: []
  syntax:
    content: 'public abstract class Singleton<T> : ISingleton, IDisposable where T : Singleton<T>, new()'
    typeParameters:
    - id: T
      description: 单例对象的类型
    content.vb: Public MustInherit Class Singleton(Of T As {Singleton(Of T), New}) Implements ISingleton, IDisposable
  inheritance:
  - System.Object
  implements:
  - Kiwi.Utility.Singleton.ISingleton
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Singleton(Of T)
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T)
  name.vb: Singleton(Of T)
- uid: Kiwi.Utility.Singleton.Singleton`1.Instance
  commentId: P:Kiwi.Utility.Singleton.Singleton`1.Instance
  id: Instance
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Kiwi.Utility.Singleton.Singleton<T>.Instance
  type: Property
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: Instance
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 20
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 单例对象
  example: []
  syntax:
    content: public static T Instance { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Shared ReadOnly Property Instance As T
  overload: Kiwi.Utility.Singleton.Singleton`1.Instance*
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).Instance
- uid: Kiwi.Utility.Singleton.Singleton`1.GetInstance
  commentId: M:Kiwi.Utility.Singleton.Singleton`1.GetInstance
  id: GetInstance
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: GetInstance()
  nameWithType: Singleton<T>.GetInstance()
  fullName: Kiwi.Utility.Singleton.Singleton<T>.GetInstance()
  type: Method
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: GetInstance
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 41
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 获得单例对象
  example: []
  syntax:
    content: public static T GetInstance()
    return:
      type: '{T}'
      description: 当前运行时中的单例对象, 如果没有则创建单例对象.
    content.vb: Public Shared Function GetInstance() As T
  overload: Kiwi.Utility.Singleton.Singleton`1.GetInstance*
  nameWithType.vb: Singleton(Of T).GetInstance()
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).GetInstance()
- uid: Kiwi.Utility.Singleton.Singleton`1.Exists
  commentId: P:Kiwi.Utility.Singleton.Singleton`1.Exists
  id: Exists
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: Singleton<T>.Exists
  fullName: Kiwi.Utility.Singleton.Singleton<T>.Exists
  type: Property
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: Exists
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 49
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: >-
    实例是否存在

    <p>照理说单例不应该有这个判断,但是主要为了解决关闭 Unity 播放时,

    刚好有组件在 OnDisable 或者 OnDestroy 中调用了单例,

    导致引擎会报错的问题.</p>
  example: []
  syntax:
    content: public static bool Exists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Exists As Boolean
  overload: Kiwi.Utility.Singleton.Singleton`1.Exists*
  nameWithType.vb: Singleton(Of T).Exists
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).Exists
- uid: Kiwi.Utility.Singleton.Singleton`1.IsInitialized
  commentId: P:Kiwi.Utility.Singleton.Singleton`1.IsInitialized
  id: IsInitialized
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: Singleton<T>.IsInitialized
  fullName: Kiwi.Utility.Singleton.Singleton<T>.IsInitialized
  type: Property
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: IsInitialized
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 59
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 单例初始化完成
  example: []
  syntax:
    content: public virtual bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsInitialized As Boolean
  overload: Kiwi.Utility.Singleton.Singleton`1.IsInitialized*
  implements:
  - Kiwi.Utility.Singleton.ISingleton.IsInitialized
  nameWithType.vb: Singleton(Of T).IsInitialized
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).IsInitialized
- uid: Kiwi.Utility.Singleton.Singleton`1.canResetSingleton
  commentId: P:Kiwi.Utility.Singleton.Singleton`1.canResetSingleton
  id: canResetSingleton
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: canResetSingleton
  nameWithType: Singleton<T>.canResetSingleton
  fullName: Kiwi.Utility.Singleton.Singleton<T>.canResetSingleton
  type: Property
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: canResetSingleton
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 64
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 单例是否可以被重置
  example: []
  syntax:
    content: public abstract bool canResetSingleton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property canResetSingleton As Boolean
  overload: Kiwi.Utility.Singleton.Singleton`1.canResetSingleton*
  implements:
  - Kiwi.Utility.Singleton.ISingleton.canResetSingleton
  nameWithType.vb: Singleton(Of T).canResetSingleton
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).canResetSingleton
- uid: Kiwi.Utility.Singleton.Singleton`1.#ctor
  commentId: M:Kiwi.Utility.Singleton.Singleton`1.#ctor
  id: '#ctor'
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: Singleton()
  nameWithType: Singleton<T>.Singleton()
  fullName: Kiwi.Utility.Singleton.Singleton<T>.Singleton()
  type: Constructor
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: .ctor
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 69
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 构造方法
  example: []
  syntax:
    content: protected Singleton()
    content.vb: Protected Sub New()
  overload: Kiwi.Utility.Singleton.Singleton`1.#ctor*
  nameWithType.vb: Singleton(Of T).New()
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).New()
  name.vb: New()
- uid: Kiwi.Utility.Singleton.Singleton`1.OnSingletonInitialize
  commentId: M:Kiwi.Utility.Singleton.Singleton`1.OnSingletonInitialize
  id: OnSingletonInitialize
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: OnSingletonInitialize()
  nameWithType: Singleton<T>.OnSingletonInitialize()
  fullName: Kiwi.Utility.Singleton.Singleton<T>.OnSingletonInitialize()
  type: Method
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: OnSingletonInitialize
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 122
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 当单例初始化时调用
  example: []
  syntax:
    content: protected virtual void OnSingletonInitialize()
    content.vb: Protected Overridable Sub OnSingletonInitialize()
  overload: Kiwi.Utility.Singleton.Singleton`1.OnSingletonInitialize*
  nameWithType.vb: Singleton(Of T).OnSingletonInitialize()
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).OnSingletonInitialize()
- uid: Kiwi.Utility.Singleton.Singleton`1.OnSingletonReset
  commentId: M:Kiwi.Utility.Singleton.Singleton`1.OnSingletonReset
  id: OnSingletonReset
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: OnSingletonReset()
  nameWithType: Singleton<T>.OnSingletonReset()
  fullName: Kiwi.Utility.Singleton.Singleton<T>.OnSingletonReset()
  type: Method
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: OnSingletonReset
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 127
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 当单例重制时调用
  example: []
  syntax:
    content: protected virtual void OnSingletonReset()
    content.vb: Protected Overridable Sub OnSingletonReset()
  overload: Kiwi.Utility.Singleton.Singleton`1.OnSingletonReset*
  nameWithType.vb: Singleton(Of T).OnSingletonReset()
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).OnSingletonReset()
- uid: Kiwi.Utility.Singleton.Singleton`1.OnSingletonRelease
  commentId: M:Kiwi.Utility.Singleton.Singleton`1.OnSingletonRelease
  id: OnSingletonRelease
  parent: Kiwi.Utility.Singleton.Singleton`1
  langs:
  - csharp
  - vb
  name: OnSingletonRelease()
  nameWithType: Singleton<T>.OnSingletonRelease()
  fullName: Kiwi.Utility.Singleton.Singleton<T>.OnSingletonRelease()
  type: Method
  source:
    remote:
      path: Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
      branch: main
      repo: https://github.com/rayyang0731/KiwiEditorUtitlity.git
    id: OnSingletonRelease
    path: ../Packages/com.kiwi.utility/Runtime/Common/Singleton/Singleton.cs
    startLine: 132
  assemblies:
  - com.kiwi.utility.runtime
  namespace: Kiwi.Utility.Singleton
  summary: 当单例释放时调用
  example: []
  syntax:
    content: protected virtual void OnSingletonRelease()
    content.vb: Protected Overridable Sub OnSingletonRelease()
  overload: Kiwi.Utility.Singleton.Singleton`1.OnSingletonRelease*
  nameWithType.vb: Singleton(Of T).OnSingletonRelease()
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).OnSingletonRelease()
references:
- uid: Kiwi.Utility.Singleton
  commentId: N:Kiwi.Utility.Singleton
  href: Kiwi.html
  name: Kiwi.Utility.Singleton
  nameWithType: Kiwi.Utility.Singleton
  fullName: Kiwi.Utility.Singleton
  spec.csharp:
  - uid: Kiwi
    name: Kiwi
    href: Kiwi.html
  - name: .
  - uid: Kiwi.Utility
    name: Utility
    href: Kiwi.Utility.html
  - name: .
  - uid: Kiwi.Utility.Singleton
    name: Singleton
    href: Kiwi.Utility.Singleton.html
  spec.vb:
  - uid: Kiwi
    name: Kiwi
    href: Kiwi.html
  - name: .
  - uid: Kiwi.Utility
    name: Utility
    href: Kiwi.Utility.html
  - name: .
  - uid: Kiwi.Utility.Singleton
    name: Singleton
    href: Kiwi.Utility.Singleton.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Kiwi.Utility.Singleton.ISingleton
  commentId: T:Kiwi.Utility.Singleton.ISingleton
  parent: Kiwi.Utility.Singleton
  href: Kiwi.Utility.Singleton.ISingleton.html
  name: ISingleton
  nameWithType: ISingleton
  fullName: Kiwi.Utility.Singleton.ISingleton
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Kiwi.Utility.Singleton.Singleton`1.Instance*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.Instance
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: Kiwi.Utility.Singleton.Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).Instance
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Kiwi.Utility.Singleton.Singleton`1.GetInstance*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.GetInstance
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_GetInstance
  name: GetInstance
  nameWithType: Singleton<T>.GetInstance
  fullName: Kiwi.Utility.Singleton.Singleton<T>.GetInstance
  nameWithType.vb: Singleton(Of T).GetInstance
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).GetInstance
- uid: Kiwi.Utility.Singleton.Singleton`1.Exists*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.Exists
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_Exists
  name: Exists
  nameWithType: Singleton<T>.Exists
  fullName: Kiwi.Utility.Singleton.Singleton<T>.Exists
  nameWithType.vb: Singleton(Of T).Exists
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Kiwi.Utility.Singleton.Singleton`1.IsInitialized*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.IsInitialized
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_IsInitialized
  name: IsInitialized
  nameWithType: Singleton<T>.IsInitialized
  fullName: Kiwi.Utility.Singleton.Singleton<T>.IsInitialized
  nameWithType.vb: Singleton(Of T).IsInitialized
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).IsInitialized
- uid: Kiwi.Utility.Singleton.ISingleton.IsInitialized
  commentId: P:Kiwi.Utility.Singleton.ISingleton.IsInitialized
  parent: Kiwi.Utility.Singleton.ISingleton
  href: Kiwi.Utility.Singleton.ISingleton.html#Kiwi_Utility_Singleton_ISingleton_IsInitialized
  name: IsInitialized
  nameWithType: ISingleton.IsInitialized
  fullName: Kiwi.Utility.Singleton.ISingleton.IsInitialized
- uid: Kiwi.Utility.Singleton.Singleton`1.canResetSingleton*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.canResetSingleton
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_canResetSingleton
  name: canResetSingleton
  nameWithType: Singleton<T>.canResetSingleton
  fullName: Kiwi.Utility.Singleton.Singleton<T>.canResetSingleton
  nameWithType.vb: Singleton(Of T).canResetSingleton
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).canResetSingleton
- uid: Kiwi.Utility.Singleton.ISingleton.canResetSingleton
  commentId: P:Kiwi.Utility.Singleton.ISingleton.canResetSingleton
  parent: Kiwi.Utility.Singleton.ISingleton
  href: Kiwi.Utility.Singleton.ISingleton.html#Kiwi_Utility_Singleton_ISingleton_canResetSingleton
  name: canResetSingleton
  nameWithType: ISingleton.canResetSingleton
  fullName: Kiwi.Utility.Singleton.ISingleton.canResetSingleton
- uid: Kiwi.Utility.Singleton.Singleton`1.#ctor*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.#ctor
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1__ctor
  name: Singleton
  nameWithType: Singleton<T>.Singleton
  fullName: Kiwi.Utility.Singleton.Singleton<T>.Singleton
  nameWithType.vb: Singleton(Of T).New
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).New
  name.vb: New
- uid: Kiwi.Utility.Singleton.Singleton`1.OnSingletonInitialize*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.OnSingletonInitialize
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_OnSingletonInitialize
  name: OnSingletonInitialize
  nameWithType: Singleton<T>.OnSingletonInitialize
  fullName: Kiwi.Utility.Singleton.Singleton<T>.OnSingletonInitialize
  nameWithType.vb: Singleton(Of T).OnSingletonInitialize
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).OnSingletonInitialize
- uid: Kiwi.Utility.Singleton.Singleton`1.OnSingletonReset*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.OnSingletonReset
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_OnSingletonReset
  name: OnSingletonReset
  nameWithType: Singleton<T>.OnSingletonReset
  fullName: Kiwi.Utility.Singleton.Singleton<T>.OnSingletonReset
  nameWithType.vb: Singleton(Of T).OnSingletonReset
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).OnSingletonReset
- uid: Kiwi.Utility.Singleton.Singleton`1.OnSingletonRelease*
  commentId: Overload:Kiwi.Utility.Singleton.Singleton`1.OnSingletonRelease
  href: Kiwi.Utility.Singleton.Singleton-1.html#Kiwi_Utility_Singleton_Singleton_1_OnSingletonRelease
  name: OnSingletonRelease
  nameWithType: Singleton<T>.OnSingletonRelease
  fullName: Kiwi.Utility.Singleton.Singleton<T>.OnSingletonRelease
  nameWithType.vb: Singleton(Of T).OnSingletonRelease
  fullName.vb: Kiwi.Utility.Singleton.Singleton(Of T).OnSingletonRelease
