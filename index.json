{
  "api/Kiwi.Utility.AnchorHorizontal.html": {
    "href": "api/Kiwi.Utility.AnchorHorizontal.html",
    "title": "Enum AnchorHorizontal | Kiwi Utility",
    "keywords": "Enum AnchorHorizontal Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 水平锚点枚举 public enum AnchorHorizontal Fields Center = 1 Left = 0 Right = 2 Stretch = 3"
  },
  "api/Kiwi.Utility.AnchorPresets.html": {
    "href": "api/Kiwi.Utility.AnchorPresets.html",
    "title": "Enum AnchorPresets | Kiwi Utility",
    "keywords": "Enum AnchorPresets Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 锚点预设枚举 public enum AnchorPresets Fields BottomCenter = 8 BottomLeft = 7 BottomRight = 9 HorStretchBottom = 15 HorStretchMiddle = 14 HorStretchTop = 13 MiddleCenter = 5 MiddleLeft = 4 MiddleRight = 6 StretchAll = 16 TopCenter = 2 TopLeft = 1 TopRight = 3 VertStretchCenter = 12 VertStretchLeft = 10 VertStretchRight = 11"
  },
  "api/Kiwi.Utility.AnchorVertical.html": {
    "href": "api/Kiwi.Utility.AnchorVertical.html",
    "title": "Enum AnchorVertical | Kiwi Utility",
    "keywords": "Enum AnchorVertical Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 垂直锚点枚举 public enum AnchorVertical Fields Bottom = 2 Middle = 1 Stretch = 3 Top = 0"
  },
  "api/Kiwi.Utility.Editor.AvatarEditor.html": {
    "href": "api/Kiwi.Utility.Editor.AvatarEditor.html",
    "title": "Class AvatarEditor | Kiwi Utility",
    "keywords": "Class AvatarEditor Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 模型预览编辑窗体 fork from Graphi public class AvatarEditor Inheritance object AvatarEditor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AvatarEditor(EditorWindow) 构造 public AvatarEditor(EditorWindow editor) Parameters editor EditorWindow 父窗体 Properties PreviewInstance 获取预览对象实例（可对实例进行相关操作） public GameObject PreviewInstance { get; } Property Value GameObject Methods AddModule<T>() 添加模块 public T AddModule<T>() where T : class, IPreviewModule Returns T Type Parameters T Dispose() 释放（在父窗体被关闭时，必须在 OnDestroy 内调用） public void Dispose() Draw(Rect, float) 绘制（在父类的 OnGUI 中调用） public void Draw(Rect rect, float extraHeight = 0) Parameters rect Rect 预览窗体所在的父窗体尺寸 (详情请查看 EditorWindow.position) extraHeight float 父窗体纵向排布的组件高度总和（也就是除此预览窗体外每一行的行高总和）(可使用此类的 GetPropertyHeight 函数获取组件高度) GetModule<T>() 获取模块 public T GetModule<T>() where T : class, IPreviewModule Returns T 如果不存在,返回Null Type Parameters T 模块类型 GetPropertyHeight(SerializedPropertyType, GUIContent) 获取 EditorWindow 内组件的高度 public float GetPropertyHeight(SerializedPropertyType type, GUIContent label = null) Parameters type SerializedPropertyType 组件类型 label GUIContent 标签（默认：空字符） Returns float ResetPreviewObj(GameObject) 重置预览对象 public void ResetPreviewObj(GameObject obj) Parameters obj GameObject Update() 刷新（在父窗体的 Update 中调用） 包含动画等 public void Update()"
  },
  "api/Kiwi.Utility.Editor.CopyHierarchyPath.html": {
    "href": "api/Kiwi.Utility.Editor.CopyHierarchyPath.html",
    "title": "Class CopyHierarchyPath | Kiwi Utility",
    "keywords": "Class CopyHierarchyPath Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 复制 GameObject 在 Hierarchy 面板中的的父子级路径 public static class CopyHierarchyPath Inheritance object CopyHierarchyPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Copy() [MenuItem(\"GameObject/Kiwi/Copy Hierarchy Path\", false, -10)] public static void Copy() CopyValidate() [MenuItem(\"GameObject/Kiwi/Copy Hierarchy Path\", true)] public static bool CopyValidate() Returns bool"
  },
  "api/Kiwi.Utility.Editor.EditorIconsBrowser.html": {
    "href": "api/Kiwi.Utility.Editor.EditorIconsBrowser.html",
    "title": "Class EditorIconsBrowser | Kiwi Utility",
    "keywords": "Class EditorIconsBrowser Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll Editor Icons 浏览器 public class EditorIconsBrowser : EditorWindow Inheritance object Object ScriptableObject EditorWindow EditorIconsBrowser Inherited Members EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.DiscardChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.TryGetOverlay(string, out Overlay) EditorWindow.OnBackingScaleFactorChanged() EditorWindow.dataModeController EditorWindow.rootVisualElement EditorWindow.overlayCanvas EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks 网上找到的代码, 但是忘了原地址了. Methods Open() [EditorToolbar(EditorToolbarAttribute.Anchor.Right, \"Kiwi\", \"浏览器/Editor Icons 浏览器\")] public static void Open()"
  },
  "api/Kiwi.Utility.Editor.EditorToolbarAttribute.Anchor.html": {
    "href": "api/Kiwi.Utility.Editor.EditorToolbarAttribute.Anchor.html",
    "title": "Enum EditorToolbarAttribute.Anchor | Kiwi Utility",
    "keywords": "Enum EditorToolbarAttribute.Anchor Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 位置 public enum EditorToolbarAttribute.Anchor Fields CenterLeft = 1 播放按钮左侧 CenterRight = 2 播放按钮右侧 Left = 0 左侧 Right = 3 右侧"
  },
  "api/Kiwi.Utility.Editor.EditorToolbarAttribute.html": {
    "href": "api/Kiwi.Utility.Editor.EditorToolbarAttribute.html",
    "title": "Class EditorToolbarAttribute | Kiwi Utility",
    "keywords": "Class EditorToolbarAttribute Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll Unity 编辑器工具栏扩展属性 [AttributeUsage(AttributeTargets.Method)] public class EditorToolbarAttribute : Attribute, _Attribute Inheritance object Attribute EditorToolbarAttribute Implements _Attribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EditorToolbarAttribute(Anchor, bool) 自定义类型 public EditorToolbarAttribute(EditorToolbarAttribute.Anchor anchor, bool custom) Parameters anchor EditorToolbarAttribute.Anchor 位置 custom bool 是否是自定义GUI EditorToolbarAttribute(Anchor, bool, int) 按钮类型 public EditorToolbarAttribute(EditorToolbarAttribute.Anchor anchor, bool custom, int order) Parameters anchor EditorToolbarAttribute.Anchor 位置 custom bool 是否是自定义GUI order int 排序 EditorToolbarAttribute(Anchor, string) 按钮类型 public EditorToolbarAttribute(EditorToolbarAttribute.Anchor anchor, string category) Parameters anchor EditorToolbarAttribute.Anchor 位置 category string 按钮名称 EditorToolbarAttribute(Anchor, string, int) 按钮类型 public EditorToolbarAttribute(EditorToolbarAttribute.Anchor anchor, string category, int order) Parameters anchor EditorToolbarAttribute.Anchor 位置 category string 按钮名称 order int 排序 EditorToolbarAttribute(Anchor, string, string) 下拉菜单类型 public EditorToolbarAttribute(EditorToolbarAttribute.Anchor anchor, string category, string path) Parameters anchor EditorToolbarAttribute.Anchor 位置 category string 下拉菜单按钮名称 path string 按钮路径 EditorToolbarAttribute(Anchor, string, string, int) 下拉菜单类型 public EditorToolbarAttribute(EditorToolbarAttribute.Anchor anchor, string category, string path, int order) Parameters anchor EditorToolbarAttribute.Anchor 位置 category string 下拉菜单按钮名称 path string 按钮路径 order int 排序 Fields Category 按钮名称 public string Category Field Value string Custom 自定义 public bool Custom Field Value bool Order 排序 public int Order Field Value int Path 名称 public string Path Field Value string Position 位置 public EditorToolbarAttribute.Anchor Position Field Value EditorToolbarAttribute.Anchor"
  },
  "api/Kiwi.Utility.Editor.EditorToolbarExtender.html": {
    "href": "api/Kiwi.Utility.Editor.EditorToolbarExtender.html",
    "title": "Class EditorToolbarExtender | Kiwi Utility",
    "keywords": "Class EditorToolbarExtender Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 编辑器工具栏扩展 [InitializeOnLoad] public static class EditorToolbarExtender Inheritance object EditorToolbarExtender Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Kiwi.Utility.Editor.EditorUtil.html": {
    "href": "api/Kiwi.Utility.Editor.EditorUtil.html",
    "title": "Class EditorUtil | Kiwi Utility",
    "keywords": "Class EditorUtil Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 编辑器工具集 public static class EditorUtil Inheritance object EditorUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAssets<T>(string, string) 获取指定文件夹下按照过滤字符串过滤后的全部对象 public static IEnumerable<T> GetAssets<T>(string directory, string filter) where T : Object Parameters directory string 目标文件夹 filter string 过滤字符串(文件名, 资产标签 \"l:\", 类型标签 \"t:\") Returns IEnumerable<T> 查找到的全部对象 Type Parameters T GetBounds(GameObject) 获取对象边框 public static Bounds GetBounds(GameObject obj) Parameters obj GameObject 目标对象 Returns Bounds GetPath(GameObject) 获取目标对象在 Hierarchy 中的路径 public static string GetPath(GameObject gameObject) Parameters gameObject GameObject 目标对象 Returns string 目标对象在 Hierarchy 中的路径 GetPath(Transform) 获取目标对象在 Hierarchy 中的路径 public static string GetPath(Transform transform) Parameters transform Transform 目标对象 Returns string 目标对象在 Hierarchy 中的路径"
  },
  "api/Kiwi.Utility.Editor.IPreviewModule.html": {
    "href": "api/Kiwi.Utility.Editor.IPreviewModule.html",
    "title": "Interface IPreviewModule | Kiwi Utility",
    "keywords": "Interface IPreviewModule Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 预览窗体模组接口 public interface IPreviewModule : IDisposable Inherited Members IDisposable.Dispose() Methods OnBottomGUI() 预览窗口下方 void OnBottomGUI() OnOverlapGUI(Rect) 覆盖预览窗口 void OnOverlapGUI(Rect rect) Parameters rect Rect OnTargetChanged(GameObject) 当预览对象发生改变 void OnTargetChanged(GameObject target) Parameters target GameObject 改变后的对象 OnTopGUI() 预览窗口上方 void OnTopGUI() Update() void Update()"
  },
  "api/Kiwi.Utility.Editor.ModelBonesModule.html": {
    "href": "api/Kiwi.Utility.Editor.ModelBonesModule.html",
    "title": "Class ModelBonesModule | Kiwi Utility",
    "keywords": "Class ModelBonesModule Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 模型骨骼模块 public class ModelBonesModule : IPreviewModule, IDisposable Inheritance object ModelBonesModule Implements IPreviewModule IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllBones 全部骨骼 public Dictionary<string, Transform> AllBones { get; } Property Value Dictionary<string, Transform> Bones 骨骼信息 public HashSet<Transform> Bones { get; } Property Value HashSet<Transform> Methods Dispose() public void Dispose()"
  },
  "api/Kiwi.Utility.Editor.ModelPreviewEditor.html": {
    "href": "api/Kiwi.Utility.Editor.ModelPreviewEditor.html",
    "title": "Class ModelPreviewEditor | Kiwi Utility",
    "keywords": "Class ModelPreviewEditor Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 模型预览窗体 fork from Graphi public class ModelPreviewEditor : Editor Inheritance object Object ScriptableObject Editor ModelPreviewEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.OnInspectorGUI() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties OnChangeInstanceCompleted 实例对象切换完成 public UnityAction<GameObject> OnChangeInstanceCompleted { get; set; } Property Value UnityAction<GameObject> previewInstance 获取当前的预览实例 public GameObject previewInstance { get; } Property Value GameObject Methods BackgroundColor(Color) 绘制背景色 当绘制背景类型不是颜色背景类型时，则设置无效 public void BackgroundColor(Color color) Parameters color Color CamClearFlags(CameraClearFlags) 绘制背景的ClearFlags public void CamClearFlags(CameraClearFlags flags) Parameters flags CameraClearFlags Draw(float, float) 绘制 public void Draw(float w = 256, float h = 256) Parameters w float 宽度 h float 高度 Draw(float, float, float, float) 绘制 public void Draw(float x, float y, float w = 256, float h = 256) Parameters x float x坐标 y float y坐标 w float 宽度 h float 高度 Draw(Rect) 绘制 public void Draw(Rect rect) Parameters rect Rect 位置 Draw(Vector2) 绘制 public void Draw(Vector2 size) Parameters size Vector2 尺寸（x：宽度，y：高度） Draw(Vector2, Vector2) 绘制 public void Draw(Vector2 pos, Vector2 size) Parameters pos Vector2 位置 size Vector2 尺寸（x：宽度，y：高度） OnPreviewGUI(Rect, GUIStyle) 渲染预览窗体 public override void OnPreviewGUI(Rect rect, GUIStyle background) Parameters rect Rect 预览 GUI 渲染位置 background GUIStyle 预览 GUI 渲染背景 ResetPreviewObj(GameObject) 重置预览对象 public void ResetPreviewObj(GameObject obj) Parameters obj GameObject 预览对象"
  },
  "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.Mode.html": {
    "href": "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.Mode.html",
    "title": "Enum PlayerPrefsBrowser.Mode | Kiwi Utility",
    "keywords": "Enum PlayerPrefsBrowser.Mode Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 模式 public enum PlayerPrefsBrowser.Mode Fields Editor = 1 仅编辑器 Runtime = 0 运行时"
  },
  "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.PlayerPrefPair.html": {
    "href": "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.PlayerPrefPair.html",
    "title": "Struct PlayerPrefsBrowser.PlayerPrefPair | Kiwi Utility",
    "keywords": "Struct PlayerPrefsBrowser.PlayerPrefPair Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 键值对数据 [Serializable] public struct PlayerPrefsBrowser.PlayerPrefPair Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Key public string Key { readonly get; set; } Property Value string Type public PlayerPrefsBrowser.ValueType Type { readonly get; set; } Property Value PlayerPrefsBrowser.ValueType Value public object Value { readonly get; set; } Property Value object"
  },
  "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.SearchRange.html": {
    "href": "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.SearchRange.html",
    "title": "Enum PlayerPrefsBrowser.SearchRange | Kiwi Utility",
    "keywords": "Enum PlayerPrefsBrowser.SearchRange Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 搜索范围 public enum PlayerPrefsBrowser.SearchRange Fields All = 0 全部 Key = 1 仅针对 Key Value = 2 仅针对 Value"
  },
  "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.ValueType.html": {
    "href": "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.ValueType.html",
    "title": "Enum PlayerPrefsBrowser.ValueType | Kiwi Utility",
    "keywords": "Enum PlayerPrefsBrowser.ValueType Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll Value 类型 public enum PlayerPrefsBrowser.ValueType Fields Bool = 3 Float = 2 Int = 1 String = 0"
  },
  "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.html": {
    "href": "api/Kiwi.Utility.Editor.PlayerPrefsBrowser.html",
    "title": "Class PlayerPrefsBrowser | Kiwi Utility",
    "keywords": "Class PlayerPrefsBrowser Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 注册表信息浏览器 public class PlayerPrefsBrowser : EditorWindow Inheritance object Object ScriptableObject EditorWindow PlayerPrefsBrowser Inherited Members EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.DiscardChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.TryGetOverlay(string, out Overlay) EditorWindow.OnBackingScaleFactorChanged() EditorWindow.dataModeController EditorWindow.rootVisualElement EditorWindow.overlayCanvas EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods CreateGUI() public void CreateGUI() GetAll(Mode) 获得全部指定模式的注册表键值对 public static PlayerPrefsBrowser.PlayerPrefPair[] GetAll(PlayerPrefsBrowser.Mode mode) Parameters mode PlayerPrefsBrowser.Mode 模式(运行时还是仅编辑器) Returns PlayerPrefPair[] GetAll(Mode, string, string) 获得全部指定模式的注册表键值对 public static PlayerPrefsBrowser.PlayerPrefPair[] GetAll(PlayerPrefsBrowser.Mode mode, string companyName, string productName) Parameters mode PlayerPrefsBrowser.Mode 模式(运行时还是仅编辑器) companyName string 公司名称 productName string 项目名称 Returns PlayerPrefPair[] Open() [EditorToolbar(EditorToolbarAttribute.Anchor.Right, \"Kiwi\", \"浏览器/注册表浏览器\")] public static void Open()"
  },
  "api/Kiwi.Utility.Editor.PreviewAnimationModule.html": {
    "href": "api/Kiwi.Utility.Editor.PreviewAnimationModule.html",
    "title": "Class PreviewAnimationModule | Kiwi Utility",
    "keywords": "Class PreviewAnimationModule Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 预览动画模组 public class PreviewAnimationModule : IPreviewModule, IDisposable Inheritance object PreviewAnimationModule Implements IPreviewModule IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispose() public void Dispose()"
  },
  "api/Kiwi.Utility.Editor.PreviewEditorWindow.html": {
    "href": "api/Kiwi.Utility.Editor.PreviewEditorWindow.html",
    "title": "Class PreviewEditorWindow | Kiwi Utility",
    "keywords": "Class PreviewEditorWindow Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 模型浏览器 public class PreviewEditorWindow : EditorWindow Inheritance object Object ScriptableObject EditorWindow PreviewEditorWindow Inherited Members EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.DiscardChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.TryGetOverlay(string, out Overlay) EditorWindow.OnBackingScaleFactorChanged() EditorWindow.dataModeController EditorWindow.rootVisualElement EditorWindow.overlayCanvas EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "api/Kiwi.Utility.Editor.PreviewEvt.html": {
    "href": "api/Kiwi.Utility.Editor.PreviewEvt.html",
    "title": "Class PreviewEvt | Kiwi Utility",
    "keywords": "Class PreviewEvt Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 预览窗体事件 fork from Graphi public static class PreviewEvt Inheritance object PreviewEvt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(Rect, PreviewRenderUtility, Vector3, ref Vector2, ref float, ref Vector3) 执行 public static void Execute(Rect rect, PreviewRenderUtility previewRenderUtils, Vector3 bodyPosition, ref Vector2 rot, ref float zoom, ref Vector3 pivotPositionOffset) Parameters rect Rect 可处理拖拽区域范围 previewRenderUtils PreviewRenderUtility 预览渲染工具对象 bodyPosition Vector3 模型包围盒的中心位置 rot Vector2 旋转变化量 zoom float 缩放变化量 pivotPositionOffset Vector3 平移变化量"
  },
  "api/Kiwi.Utility.Editor.ProcessHelper.html": {
    "href": "api/Kiwi.Utility.Editor.ProcessHelper.html",
    "title": "Class ProcessHelper | Kiwi Utility",
    "keywords": "Class ProcessHelper Namespace Kiwi.Utility.Editor Assembly com.kiwi.utility.editor.dll 程序执行辅助器 public static class ProcessHelper Inheritance object ProcessHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteCommand(string, string, string, bool, bool, bool) 执行命令行 public static string ExecuteCommand(string folderPath, string fileName, string args = null, bool useShellExecute = true, bool noWindow = false, bool printException = false) Parameters folderPath string 要执行文件的路径 fileName string 要执行的文件名称(带扩展名) args string 参数 useShellExecute bool 是否打开程序或者文件或者其他任何能够打开的东西（如网址） noWindow bool 是否显示窗口 printException bool 是否打印错误 Returns string CMD output 信息"
  },
  "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.GraphicRaycastOutline.html": {
    "href": "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.GraphicRaycastOutline.html",
    "title": "Class GraphicRaycastOutline | Kiwi Utility",
    "keywords": "Class GraphicRaycastOutline Namespace Kiwi.Utility.Editor.SceneView.OverlayMenu Assembly com.kiwi.utility.editor.dll Graphic 射线检测轮廓线显示 [InitializeOnLoad] public static class GraphicRaycastOutline Inheritance object GraphicRaycastOutline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Display 是否显示 public static bool Display Field Value bool"
  },
  "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.UIQuickTools.html": {
    "href": "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.UIQuickTools.html",
    "title": "Class UIQuickTools | Kiwi Utility",
    "keywords": "Class UIQuickTools Namespace Kiwi.Utility.Editor.SceneView.OverlayMenu Assembly com.kiwi.utility.editor.dll [Overlay(typeof(SceneView), \"UI Quick Tools\", false)] public class UIQuickTools : ToolbarOverlay, ICreateToolbar Inheritance object Overlay ToolbarOverlay UIQuickTools Implements ICreateToolbar Inherited Members ToolbarOverlay.CreateHorizontalToolbarContent() ToolbarOverlay.CreateVerticalToolbarContent() ToolbarOverlay.CreatePanelContent() ToolbarOverlay.toolbarElements Overlay.ussClassName Overlay.CreateContent(Layout) Overlay.OnCreated() Overlay.OnWillBeDestroyed() Overlay.Close() Overlay.Undock() Overlay.containerWindow Overlay.id Overlay.collapsedIcon Overlay.layout Overlay.collapsed Overlay.displayName Overlay.displayed Overlay.isInToolbar Overlay.size Overlay.minSize Overlay.maxSize Overlay.floatingPosition Overlay.floating Overlay.layoutChanged Overlay.collapsedChanged Overlay.displayedChanged Overlay.floatingChanged Overlay.floatingPositionChanged object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.UISelector.html": {
    "href": "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.UISelector.html",
    "title": "Class UISelector | Kiwi Utility",
    "keywords": "Class UISelector Namespace Kiwi.Utility.Editor.SceneView.OverlayMenu Assembly com.kiwi.utility.editor.dll public static class UISelector Inheritance object UISelector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Enabled 是否启用 public static bool Enabled { get; set; } Property Value bool"
  },
  "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.html": {
    "href": "api/Kiwi.Utility.Editor.SceneView.OverlayMenu.html",
    "title": "Namespace Kiwi.Utility.Editor.SceneView.OverlayMenu | Kiwi Utility",
    "keywords": "Namespace Kiwi.Utility.Editor.SceneView.OverlayMenu Classes GraphicRaycastOutline Graphic 射线检测轮廓线显示 UIQuickTools UISelector"
  },
  "api/Kiwi.Utility.Editor.html": {
    "href": "api/Kiwi.Utility.Editor.html",
    "title": "Namespace Kiwi.Utility.Editor | Kiwi Utility",
    "keywords": "Namespace Kiwi.Utility.Editor Classes AvatarEditor 模型预览编辑窗体 fork from Graphi CopyHierarchyPath 复制 GameObject 在 Hierarchy 面板中的的父子级路径 EditorIconsBrowser Editor Icons 浏览器 EditorToolbarAttribute Unity 编辑器工具栏扩展属性 EditorToolbarExtender 编辑器工具栏扩展 EditorUtil 编辑器工具集 ModelBonesModule 模型骨骼模块 ModelPreviewEditor 模型预览窗体 fork from Graphi PlayerPrefsBrowser 注册表信息浏览器 PreviewAnimationModule 预览动画模组 PreviewEditorWindow 模型浏览器 PreviewEvt 预览窗体事件 fork from Graphi ProcessHelper 程序执行辅助器 Structs PlayerPrefsBrowser.PlayerPrefPair 键值对数据 Interfaces IPreviewModule 预览窗体模组接口 Enums EditorToolbarAttribute.Anchor 位置 PlayerPrefsBrowser.Mode 模式 PlayerPrefsBrowser.SearchRange 搜索范围 PlayerPrefsBrowser.ValueType Value 类型"
  },
  "api/Kiwi.Utility.KiwiExtend.html": {
    "href": "api/Kiwi.Utility.KiwiExtend.html",
    "title": "Class KiwiExtend | Kiwi Utility",
    "keywords": "Class KiwiExtend Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll RectTransform 类方法扩展 public static class KiwiExtend Inheritance object KiwiExtend Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DisableCanvasGroup(GameObject) 隐藏 CanvasGroup public static void DisableCanvasGroup(this GameObject canvas) Parameters canvas GameObject 被扩展对象 EnableCanvasGroup(Canvas) 启用 CanvasGroup public static void EnableCanvasGroup(this Canvas canvas) Parameters canvas Canvas 被扩展对象 FindChild(GameObject, string) 查找子对象 若存在多个同名的子对象，则返回第一个 public static GameObject FindChild(this GameObject go, string name) Parameters go GameObject 被扩展的对象 name string 子对象名称 Returns GameObject 查找到的子对象 FindChildWithTag(GameObject, string, out GameObject) 根据指定 tag 查找子对象 public static bool FindChildWithTag(this GameObject go, string tag, out GameObject targetChild) Parameters go GameObject 被扩展的对象 tag string 指定的 tag targetChild GameObject 返回查找到的目标子对象 Returns bool 如果查找到指定对象返回 True,否则返回 false ForceGetComponent(Component, string) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this Component cp, string type) Parameters cp Component 被扩展的对象 type string 目标组件必须继承自Component,需要带命名空间的完整名称 Returns Component 目标组件 ForceGetComponent(Component, string, out bool) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this Component cp, string type, out bool exist) Parameters cp Component 被扩展的对象 type string 目标组件必须继承自Component,需要带命名空间的完整名称 exist bool 想要获取的组件是否存在 Returns Component 目标组件 ForceGetComponent(Component, Type) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this Component cp, Type type) Parameters cp Component 被扩展的对象 type Type 目标组件必须继承自Component Returns Component 目标组件 ForceGetComponent(Component, Type, out bool) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this Component cp, Type type, out bool exist) Parameters cp Component 被扩展的对象 type Type 目标组件必须继承自Component exist bool 想要获取的组件是否存在 Returns Component 目标组件 ForceGetComponent(GameObject, string) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this GameObject go, string type) Parameters go GameObject 被扩展的对象 type string 目标组件必须继承自Component,需要带命名空间的完整名称 Returns Component 目标组件 ForceGetComponent(GameObject, string, out bool) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this GameObject go, string type, out bool exist) Parameters go GameObject 被扩展的对象 type string 目标组件必须继承自Component,需要带命名空间的完整名称 exist bool 想要获取的组件是否存在 Returns Component 目标组件 ForceGetComponent(GameObject, Type) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this GameObject go, Type type) Parameters go GameObject 被扩展的对象 type Type 目标组件必须继承自Component Returns Component 目标组件 ForceGetComponent(GameObject, Type, out bool) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static Component ForceGetComponent(this GameObject go, Type type, out bool exist) Parameters go GameObject 被扩展的对象 type Type 目标组件必须继承自Component exist bool 想要获取的组件是否存在 Returns Component 目标组件 ForceGetComponent<T>(Component) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static T ForceGetComponent<T>(this Component cp) where T : Component Parameters cp Component 被扩展的对象 Returns T 目标组件 Type Parameters T 目标组件必须继承自 Component ForceGetComponent<T>(Component, out bool) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static T ForceGetComponent<T>(this Component cp, out bool exist) where T : Component Parameters cp Component 被扩展的对象 exist bool 想要获取的组件是否存在 Returns T 目标组件 Type Parameters T 目标组件必须继承自 Component ForceGetComponent<T>(GameObject) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static T ForceGetComponent<T>(this GameObject go) where T : Component Parameters go GameObject 被扩展的对象 Returns T 目标组件 Type Parameters T 目标组件必须继承自 Component ForceGetComponent<T>(GameObject, out bool) 强制获得对象组件,如果对象未挂载目标组件,则为该对象添加组件 public static T ForceGetComponent<T>(this GameObject go, out bool exist) where T : Component Parameters go GameObject 被扩展的对象 exist bool 想要获取的组件是否存在 Returns T 目标组件 Type Parameters T 目标组件必须继承自 Component GetAllChildren(Transform, bool) 获得 Transform 下的所有子物体 public static Transform[] GetAllChildren(this Transform transform, bool includeInactive = false) Parameters transform Transform 被扩展的对象 includeInactive bool 是否获取未激活的子对象 Returns Transform[] GetAnchoredPosition(RectTransform, out float, out float) 获得锚点坐标 public static void GetAnchoredPosition(this RectTransform rectTransform, out float x, out float y) Parameters rectTransform RectTransform 被扩展的对象 x float x 轴坐标 y float y 轴坐标 GetAnchoredPosition3D(RectTransform, out float, out float, out float) 获得3D锚点坐标 public static void GetAnchoredPosition3D(this RectTransform rectTransform, out float x, out float y, out float z) Parameters rectTransform RectTransform 被扩展的对象 x float x 轴坐标 y float y 轴坐标 z float z 轴坐标 GetCenterPosition(GameObject) 获取对象的中心位置坐标 public static Vector3 GetCenterPosition(this GameObject go) Parameters go GameObject 被扩展的对象 Returns Vector3 对象的中心位置坐标 GetHeight(RectTransform) 获取高度 public static float GetHeight(this RectTransform rectTransform) Parameters rectTransform RectTransform 被扩展的对象 Returns float GetLocalPosition(Transform, out float, out float, out float) 获取 Transform 的本地坐标 public static void GetLocalPosition(this Transform transform, out float x, out float y, out float z) Parameters transform Transform 被扩展的对象 x float x 轴坐标 y float y 轴坐标 z float z 轴坐标 GetLocalScale(Transform, out float, out float, out float) 获取 Transform 的缩放比例 public static void GetLocalScale(this Transform transform, out float x, out float y, out float z) Parameters transform Transform 被扩展的对象 x float x 轴缩放 y float y 轴缩放 z float z 轴缩放 GetPath(Transform) 获取 Transform 的树结构 public static string GetPath(this Transform transform) Parameters transform Transform 被扩展的对象 Returns string GetPosition(Transform, out float, out float, out float) 获取 Transform 的世界坐标 public static void GetPosition(this Transform transform, out float x, out float y, out float z) Parameters transform Transform 被扩展的对象 x float x 轴坐标 y float y 轴坐标 z float z 轴坐标 GetSelfChildren(Transform, bool) 获得 Transform 的子物体(仅 Transform 自己的子对象,不进行递归获取) public static Transform[] GetSelfChildren(this Transform transform, bool includeInactive = false) Parameters transform Transform 被扩展的对象 includeInactive bool 是否获取未激活的子对象 Returns Transform[] GetSize(RectTransform) 获取尺寸 public static Vector2 GetSize(this RectTransform rectTransform) Parameters rectTransform RectTransform 被扩展的对象 Returns Vector2 GetSize(RectTransform, out float, out float) 获取尺寸 public static void GetSize(this RectTransform rectTransform, out float width, out float height) Parameters rectTransform RectTransform 被扩展的对象 width float 返回的宽度 height float 返回的高度 GetSizeDelta(RectTransform, out float, out float) 获取 Transform 的 SizeDelta public static void GetSizeDelta(this RectTransform rectTransform, out float x, out float y) Parameters rectTransform RectTransform 被扩展的对象 x float y float GetWidth(RectTransform) 获取宽度 public static float GetWidth(this RectTransform rectTransform) Parameters rectTransform RectTransform 被扩展的对象 Returns float IsAnchorHorizontal(RectTransform, AnchorHorizontal) 是否与指定的水平预设锚点相等 public static bool IsAnchorHorizontal(this RectTransform rectTransform, AnchorHorizontal horizontal) Parameters rectTransform RectTransform 被扩展的对象 horizontal AnchorHorizontal 水平锚点位置 Returns bool IsAnchorHorizontal(RectTransform, int) 是否与指定的水平预设锚点相等 public static bool IsAnchorHorizontal(this RectTransform rectTransform, int horizontal) Parameters rectTransform RectTransform 被扩展的对象 horizontal int 水平锚点位置 AnchorHorizontal [0-Left,1-Center,2-Right,3-Stretch] Returns bool IsAnchorPresets(RectTransform, AnchorHorizontal, AnchorVertical) 是否与指定的预设锚点相等 public static bool IsAnchorPresets(this RectTransform rectTransform, AnchorHorizontal horizontal, AnchorVertical vertical) Parameters rectTransform RectTransform 被扩展的对象 horizontal AnchorHorizontal 水平锚点位置 vertical AnchorVertical 垂直锚点位置 Returns bool IsAnchorPresets(RectTransform, int, int) 是否与指定的预设锚点相等 public static bool IsAnchorPresets(this RectTransform rectTransform, int horizontal, int vertical) Parameters rectTransform RectTransform 被扩展的对象 horizontal int 水平锚点位置 AnchorHorizontal [0-Left,1-Center,2-Right,3-Stretch] vertical int 垂直锚点位置 AnchorVertical [0-Top,1-Middle,2-Bottom,3-Stretch] Returns bool IsAnchorVertical(RectTransform, AnchorVertical) 是否与指定的垂直预设锚点值相等 public static bool IsAnchorVertical(this RectTransform rectTransform, AnchorVertical vertical) Parameters rectTransform RectTransform 被扩展的对象 vertical AnchorVertical 垂直锚点位置 Returns bool IsAnchorVertical(RectTransform, int) 是否与指定的垂直预设锚点相等 public static bool IsAnchorVertical(this RectTransform rectTransform, int vertical) Parameters rectTransform RectTransform 被扩展的对象 vertical int 垂直预设锚点位置 AnchorVertical [0-Top,1-Middle,2-Bottom,3-Stretch] Returns bool IsNull(Object) 判断是否为 null public static bool IsNull(this Object obj) Parameters obj Object 被扩展的对象 Returns bool Overlaps(RectTransform, RectTransform) 判断两个 RectTransform 是否相交(矩形相交) 主要就是检测 RectTransform 的拐点是否在另一个 RectTransform 中. public static bool Overlaps(this RectTransform rectTransform, RectTransform target) Parameters rectTransform RectTransform 被扩展的对象 target RectTransform 要判断的目标对象 Returns bool ResetZero(RectTransform, AnchorHorizontal, AnchorVertical, Transform) 将位置,宽高,锚点,中心点全部重置 public static void ResetZero(this RectTransform rectTransform, AnchorHorizontal horizontal, AnchorVertical vertical, Transform parent = null) Parameters rectTransform RectTransform 被扩展的对象 horizontal AnchorHorizontal 水平锚点位置 vertical AnchorVertical 垂直锚点位置 parent Transform 父物体 ResetZero(RectTransform, int, int, Transform) 将位置,宽高,锚点,中心点全部重置 public static void ResetZero(this RectTransform rectTransform, int horizontal, int vertical, Transform parent = null) Parameters rectTransform RectTransform 被扩展的对象 horizontal int 水平锚点位置 AnchorHorizontal vertical int 垂直锚点位置 AnchorVertical parent Transform 父物体 SetAnchor(RectTransform, AnchorPresets, float, float) 设置锚点 public static void SetAnchor(this RectTransform rectTransform, AnchorPresets anchorPresets, float posX = 0, float posY = 0) Parameters rectTransform RectTransform 被扩展的对象 anchorPresets AnchorPresets 要设置的锚点预设 posX float 设置锚点后,要设置的 X 轴坐标 posY float 设置锚点后,要设置的 Y 轴坐标 SetAnchor(RectTransform, int, float, float) 设置锚点 public static void SetAnchor(this RectTransform rectTransform, int anchorPresets, float posX = 0, float posY = 0) Parameters rectTransform RectTransform 被扩展的对象 anchorPresets int 要设置的锚点预设 AnchorPresets posX float 设置锚点后,要设置的 X 轴坐标 posY float 设置锚点后,要设置的 Y 轴坐标 SetAnchorHorizontal(RectTransform, AnchorHorizontal) 设置水平预设锚点 public static void SetAnchorHorizontal(this RectTransform rectTransform, AnchorHorizontal horizontal) Parameters rectTransform RectTransform 被扩展的对象 horizontal AnchorHorizontal 水平锚点位置 SetAnchorHorizontal(RectTransform, int) 设置水平预设锚点 public static void SetAnchorHorizontal(this RectTransform rectTransform, int horizontal) Parameters rectTransform RectTransform 被扩展的对象 horizontal int 水平锚点位置 AnchorHorizontal [0-Left,1-Center,2-Right,3-Stretch] SetAnchorMax(RectTransform, float, float) 设置锚点最大值 public static void SetAnchorMax(this RectTransform rectTransform, float x, float y) Parameters rectTransform RectTransform 被扩展的对象 x float 锚点 X 轴坐标 y float 锚点 Y 轴坐标 SetAnchorMaxX(RectTransform, float) 设置锚点 X 轴最大值 public static void SetAnchorMaxX(this RectTransform rectTransform, float x) Parameters rectTransform RectTransform 被扩展的对象 x float 锚点 X 轴坐标 SetAnchorMaxY(RectTransform, float) 设置锚点 Y 轴最大值 public static void SetAnchorMaxY(this RectTransform rectTransform, float y) Parameters rectTransform RectTransform 被扩展的对象 y float 锚点 Y 轴坐标 SetAnchorMin(RectTransform, float, float) 设置锚点最小值 public static void SetAnchorMin(this RectTransform rectTransform, float x, float y) Parameters rectTransform RectTransform 被扩展的对象 x float 锚点 X 轴坐标 y float 锚点 Y 轴坐标 SetAnchorMinX(RectTransform, float) 设置锚点 X 轴最小值 public static void SetAnchorMinX(this RectTransform rectTransform, float x) Parameters rectTransform RectTransform 被扩展的对象 x float 锚点 X 轴坐标 SetAnchorMinY(RectTransform, float) 设置锚点 Y 轴最小值 public static void SetAnchorMinY(this RectTransform rectTransform, float y) Parameters rectTransform RectTransform 被扩展的对象 y float 锚点 Y 轴坐标 SetAnchorPresets(RectTransform, AnchorHorizontal, AnchorVertical) 设置预设锚点 public static void SetAnchorPresets(this RectTransform rectTransform, AnchorHorizontal horizontal, AnchorVertical vertical) Parameters rectTransform RectTransform 被扩展的对象 horizontal AnchorHorizontal 水平锚点位置 vertical AnchorVertical 垂直锚点位置 SetAnchorPresets(RectTransform, int, int) 设置预设锚点 public static void SetAnchorPresets(this RectTransform rectTransform, int horizontal, int vertical) Parameters rectTransform RectTransform 被扩展的对象 horizontal int 水平锚点位置 [0-Left,1-Center,2-Right,3-Stretch] vertical int 垂直锚点位置 [0-Top,1-Middle,2-Bottom,3-Stretch] SetAnchorVertical(RectTransform, AnchorVertical) 设置垂直锚点 public static void SetAnchorVertical(this RectTransform rectTransform, AnchorVertical vertical) Parameters rectTransform RectTransform 被扩展的对象 vertical AnchorVertical 垂直锚点位置 SetAnchorVertical(RectTransform, int) 设置垂直锚点 public static void SetAnchorVertical(this RectTransform rectTransform, int vertical) Parameters rectTransform RectTransform 被扩展的对象 vertical int 垂直锚点位置 AnchorVertical [0-Top,1-Middle,2-Bottom,3-Stretch] SetAnchoredPosition(RectTransform, float, float) 设置锚点坐标 public static void SetAnchoredPosition(this RectTransform rectTransform, float x, float y) Parameters rectTransform RectTransform 被扩展的对象 x float X 轴坐标 y float Y 轴坐标 SetAnchoredPosition(RectTransform, Vector2) 设置锚点坐标 public static void SetAnchoredPosition(this RectTransform rectTransform, Vector2 anchoredPosition) Parameters rectTransform RectTransform 被扩展的对象 anchoredPosition Vector2 要设置的锚点坐标 SetAnchoredPosition3D(RectTransform, float, float, float) 设置锚点 3D 坐标 public static void SetAnchoredPosition3D(this RectTransform rectTransform, float x, float y, float z) Parameters rectTransform RectTransform 被扩展的对象 x float 要设置的 X 轴坐标 y float 要设置的 Y 轴坐标 z float 要设置的 Z 轴坐标 SetAnchoredPosition3D(RectTransform, Vector3) 设置锚点 3D 坐标 public static void SetAnchoredPosition3D(this RectTransform rectTransform, Vector3 anchoredPosition3D) Parameters rectTransform RectTransform 被扩展的对象 anchoredPosition3D Vector3 要设置的锚点 3D 坐标 SetAnchoredPosition3DX(RectTransform, float) 设置锚点 X 轴 3D 坐标 public static void SetAnchoredPosition3DX(this RectTransform rectTransform, float x) Parameters rectTransform RectTransform 被扩展的对象 x float 要设置的 X 轴坐标 SetAnchoredPosition3DY(RectTransform, float) 设置锚点 Y 轴 3D 坐标 public static void SetAnchoredPosition3DY(this RectTransform rectTransform, float y) Parameters rectTransform RectTransform 被扩展的对象 y float 要设置的 Y 轴坐标 SetAnchoredPosition3DZ(RectTransform, float) 设置锚点 Z 轴 3D 坐标 public static void SetAnchoredPosition3DZ(this RectTransform rectTransform, float z) Parameters rectTransform RectTransform 被扩展的对象 z float 要设置的 Z 轴坐标 SetAnchoredPositionX(RectTransform, float) 设置锚点 X 轴坐标 public static void SetAnchoredPositionX(this RectTransform rectTransform, float x) Parameters rectTransform RectTransform 被扩展的对象 x float 要设置的 X 轴坐标 SetAnchoredPositionY(RectTransform, float) 设置锚点 Y 轴坐标 public static void SetAnchoredPositionY(this RectTransform rectTransform, float y) Parameters rectTransform RectTransform 被扩展的对象 y float 要设置的 Y 轴坐标 SetDisplay(GameObject, bool) 控制对象显隐 public static void SetDisplay(this GameObject go, bool val) Parameters go GameObject 被扩展的对象 val bool 是否要显示 SetEuler(Transform, float, float, float) 设置 Transform 的欧拉角 public static void SetEuler(this Transform transform, float x, float y, float z) Parameters transform Transform 被扩展的对象 x float X轴角度 y float Y轴角度 z float Z轴角度 SetEuler(Transform, Vector3) 设置 Transform 的欧拉角 public static void SetEuler(this Transform transform, Vector3 newLocalEuler) Parameters transform Transform 被扩展的对象 newLocalEuler Vector3 要设置的欧拉角 SetFullStretch(RectTransform) 全延展并轴点居中 public static void SetFullStretch(this RectTransform rectTransform) Parameters rectTransform RectTransform 被扩展的对象 SetHeight(RectTransform, float) 设置高度 public static void SetHeight(this RectTransform rectTransform, float height) Parameters rectTransform RectTransform 被扩展的对象 height float 要设置的高度 SetLayer(GameObject, int, bool, bool, bool) 设置 GameObject 的 Layer public static void SetLayer(this GameObject go, int layer, bool syncChildren = false, bool recursion = true, bool includeInactive = true) Parameters go GameObject 被扩展的对象 layer int 要设置的 Layer syncChildren bool 是否同时设置子对象的 Layer recursion bool 是否递归获得所有子对象 includeInactive bool 是否获取未激活的子对象 SetLocalEuler(Transform, float, float, float) 设置 Transform 的本地欧拉角 public static void SetLocalEuler(this Transform transform, float x, float y, float z) Parameters transform Transform 被扩展的对象 x float X轴角度 y float Y轴角度 z float Z轴角度 SetLocalEuler(Transform, Vector3) 设置 Transform 的本地欧拉角 public static void SetLocalEuler(this Transform transform, Vector3 newLocalEuler) Parameters transform Transform 被扩展的对象 newLocalEuler Vector3 要设置的欧拉角 SetLocalPosition(Transform, float, float, float) 设置 Transform 的本地坐标 public static void SetLocalPosition(this Transform transform, float x, float y, float z) Parameters transform Transform 被扩展的对象 x float X轴坐标 y float Y轴坐标 z float Z轴坐标 SetLocalPosition(Transform, Vector3) 设置 Transform 的本地坐标 public static void SetLocalPosition(this Transform transform, Vector3 newLocalPosition) Parameters transform Transform 被扩展的对象 newLocalPosition Vector3 要设置的本地坐标位置 SetLocalScale(Transform, float, float, float) 设置缩放比例 public static void SetLocalScale(this Transform transform, float x, float y, float z) Parameters transform Transform 被扩展的对象 x float X 轴缩放值 y float Y 轴缩放值 z float Z 轴缩放值 SetLocalScale(Transform, Vector3) 设置缩放比例 public static void SetLocalScale(this Transform transform, Vector3 scale) Parameters transform Transform 被扩展的对象 scale Vector3 要设置的缩放比例 SetParentAndPos(Transform, Transform, Vector3) 设置Transform的父物体,并对相对坐标赋值 public static void SetParentAndPos(this Transform transform, Transform parent, Vector3 localPosition) Parameters transform Transform 被扩展的对象 parent Transform 父物体目标 localPosition Vector3 父物体下的相对坐标 SetPivot(RectTransform, PivotPresets) 设置中心点 public static void SetPivot(this RectTransform rectTransform, PivotPresets preset) Parameters rectTransform RectTransform 被扩展的对象 preset PivotPresets 预设中心点 SetPivot(RectTransform, int) 设置中心点 public static void SetPivot(this RectTransform rectTransform, int preset) Parameters rectTransform RectTransform 被扩展的对象 preset int 预设中心点 PivotPresets SetPivot(RectTransform, float, float) 设置中心点 public static void SetPivot(this RectTransform rectTransform, float x, float y) Parameters rectTransform RectTransform 被扩展的对象 x float X 轴坐标 y float Y 轴坐标 SetPosition(Transform, float, float, float) 设置 Transform 的世界坐标 public static void SetPosition(this Transform transform, float x, float y, float z) Parameters transform Transform 被扩展的对象 x float X轴坐标 y float Y轴坐标 z float Z轴坐标 SetPosition(Transform, Vector3) 设置 Transform 的世界坐标 public static void SetPosition(this Transform transform, Vector3 newPosition) Parameters transform Transform 被扩展的对象 newPosition Vector3 要设置的坐标位置 SetSize(RectTransform, float, float) 设置尺寸 public static void SetSize(this RectTransform rectTransform, float width, float height) Parameters rectTransform RectTransform 被扩展的对象 width float 要设置的宽度 height float 要设置的高度 SetSize(RectTransform, Vector2) 设置尺寸 public static void SetSize(this RectTransform rectTransform, Vector2 size) Parameters rectTransform RectTransform 被扩展的对象 size Vector2 要设置的尺寸 SetSizeDelta(RectTransform, float, float) 设置 SizeDelta public static void SetSizeDelta(this RectTransform rectTransform, float x, float y) Parameters rectTransform RectTransform 被扩展的对象 x float y float SetSizeDelta(RectTransform, Vector2) 设置 SizeDelta public static void SetSizeDelta(this RectTransform rectTransform, Vector2 sizeDelta) Parameters rectTransform RectTransform 被扩展的对象 sizeDelta Vector2 SetWidth(RectTransform, float) 设置宽度 public static void SetWidth(this RectTransform rectTransform, float width) Parameters rectTransform RectTransform 被扩展的对象 width float 要设置的宽度 rectTransform(Component) 获得 GameObject 的 RectTransform 组件 public static RectTransform rectTransform(this Component cp) Parameters cp Component 被扩展的对象 Returns RectTransform 获取成功返回 RectTransform 组件, 否则返回 null. rectTransform(GameObject) 获得 GameObject 的 RectTransform 组件 public static RectTransform rectTransform(this GameObject go) Parameters go GameObject 被扩展的对象 Returns RectTransform 获取成功返回 RectTransform 组件, 否则返回 null."
  },
  "api/Kiwi.Utility.KiwiMath.html": {
    "href": "api/Kiwi.Utility.KiwiMath.html",
    "title": "Class KiwiMath | Kiwi Utility",
    "keywords": "Class KiwiMath Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 数学公式类 public static class KiwiMath Inheritance object KiwiMath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Approximately(float, float, double) 是否为近似值(主要比较两个 float 值是否一样) 主要是因为 Unity 自己的 Mathf.Approximation 无法自己定义容差, 而且最后的判断没明白为啥需要乘以 8.0f,所以创建了这个函数. public static bool Approximately(float a, float b, double tolerance = 1E-06) Parameters a float 要比较的第一个数值 b float 要比较的第二个数值 tolerance double 容差,默认为 1e-6 (0.000001) Returns bool 返回 true 可以理解为两个float值相等,否则返回 false IsOdd(int) 是否为奇数 public static bool IsOdd(int num) Parameters num int 要检查的数字 Returns bool"
  },
  "api/Kiwi.Utility.KiwiPath.html": {
    "href": "api/Kiwi.Utility.KiwiPath.html",
    "title": "Class KiwiPath | Kiwi Utility",
    "keywords": "Class KiwiPath Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 路径工具 public static class KiwiPath Inheritance object KiwiPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertToAbsolutePath(string, string) 转换为绝对路径 public static string ConvertToAbsolutePath(string relativePath, string rootPath = null) Parameters relativePath string 要转换的相对路径 rootPath string 根路径(默认为 Application.dataPath) Returns string 将 relativePath 转换为 相对 rootPath 的绝对路径 ConvertToRelativePath(string, string) 转换为相对路径 public static string ConvertToRelativePath(string absolutePath, string rootPath = null) Parameters absolutePath string 要转换的绝对路径 rootPath string 根路径(默认为 Application.dataPath) Returns string 将 absolutePath 转换为 相对 rootPath 的相对路径"
  },
  "api/Kiwi.Utility.PivotPresets.html": {
    "href": "api/Kiwi.Utility.PivotPresets.html",
    "title": "Enum PivotPresets | Kiwi Utility",
    "keywords": "Enum PivotPresets Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 重点点预设枚举 public enum PivotPresets Fields BottomCenter = 8 BottomLeft = 7 BottomRight = 9 MiddleCenter = 5 MiddleLeft = 4 MiddleRight = 6 TopCenter = 2 TopLeft = 1 TopRight = 3"
  },
  "api/Kiwi.Utility.SetPropertyUtility.html": {
    "href": "api/Kiwi.Utility.SetPropertyUtility.html",
    "title": "Class SetPropertyUtility | Kiwi Utility",
    "keywords": "Class SetPropertyUtility Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 属性设置工具集 public static class SetPropertyUtility Inheritance object SetPropertyUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetClass<T>(ref T, T) 设置类数据 public static bool SetClass<T>(ref T currentValue, T newValue) where T : class Parameters currentValue T 当前类数据 newValue T 要设置的类数据 Returns bool 如果设置成功返回 true,否则返回 false Type Parameters T SetColor(ref Color, float, float, float, float) 设置颜色 public static bool SetColor(ref Color currentValue, float r, float g, float b, float a) Parameters currentValue Color 当前颜色值 r float 要设置的红色色值 g float 要设置的绿色色值 b float 要设置的蓝色色值 a float 要设置的透明度 Returns bool 如果设置成功返回 true,否则返回 false SetColor(ref Color, Color) 设置颜色 public static bool SetColor(ref Color currentValue, Color newValue) Parameters currentValue Color 当前颜色值 newValue Color 要设置的颜色值 Returns bool 如果设置成功返回 true,否则返回 false SetFloat(ref float, float) 设置 Float public static bool SetFloat(ref float currentValue, float newValue) Parameters currentValue float 当前 Float 值 newValue float 要设置的 Float 值 Returns bool 如果设置成功返回 true,否则返回 false SetStruct<T>(ref T, T) 设置结构体数据 public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct Parameters currentValue T 当前结构体数据 newValue T 要设置的结构体数据 Returns bool 如果设置成功返回 true,否则返回 false Type Parameters T SetVector2(ref Vector2, float, float) 设置 Vector2 public static bool SetVector2(ref Vector2 currentValue, float x, float y) Parameters currentValue Vector2 当前 Vector2 值 x float 要设置的 x 值 y float 要设置的 y 值 Returns bool 如果设置成功返回 true,否则返回 false SetVector2(ref Vector2, Vector2) 设置 Vector2 public static bool SetVector2(ref Vector2 currentValue, Vector2 newValue) Parameters currentValue Vector2 当前 Vector2 值 newValue Vector2 要设置的 Vector2 值 Returns bool 如果设置成功返回 true,否则返回 false SetVector3(ref Vector3, float, float, float) 设置 Vector3 public static bool SetVector3(ref Vector3 currentValue, float x, float y, float z) Parameters currentValue Vector3 当前 Vector3 值 x float 要设置的 x 值 y float 要设置的 y 值 z float 要设置的 z 值 Returns bool 如果设置成功返回 true,否则返回 false SetVector3(ref Vector3, Vector3) 设置 Vector3 public static bool SetVector3(ref Vector3 currentValue, Vector3 newValue) Parameters currentValue Vector3 当前 Vector3 值 newValue Vector3 要设置的 Vector3 值 Returns bool 如果设置成功返回 true,否则返回 false"
  },
  "api/Kiwi.Utility.Singleton.ISingleton.html": {
    "href": "api/Kiwi.Utility.Singleton.ISingleton.html",
    "title": "Interface ISingleton | Kiwi Utility",
    "keywords": "Interface ISingleton Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll 单例接口 public interface ISingleton : IDisposable Inherited Members IDisposable.Dispose() Properties IsInitialized 单例初始化完成 bool IsInitialized { get; } Property Value bool canResetSingleton 单例是否可以被重置 bool canResetSingleton { get; } Property Value bool Methods InitializeSingleton() 单例初始化 void InitializeSingleton() ReleaseSingleton() 单例释放 void ReleaseSingleton() ResetSingleton() 单例重置 void ResetSingleton()"
  },
  "api/Kiwi.Utility.Singleton.ISingletonFixedUpdate.html": {
    "href": "api/Kiwi.Utility.Singleton.ISingletonFixedUpdate.html",
    "title": "Interface ISingletonFixedUpdate | Kiwi Utility",
    "keywords": "Interface ISingletonFixedUpdate Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll public interface ISingletonFixedUpdate Methods SingletonFixedUpdate(float) void SingletonFixedUpdate(float fixedDeltaTime) Parameters fixedDeltaTime float"
  },
  "api/Kiwi.Utility.Singleton.ISingletonLateUpdate.html": {
    "href": "api/Kiwi.Utility.Singleton.ISingletonLateUpdate.html",
    "title": "Interface ISingletonLateUpdate | Kiwi Utility",
    "keywords": "Interface ISingletonLateUpdate Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll public interface ISingletonLateUpdate Methods SingletonLateUpdate(float) void SingletonLateUpdate(float deltaTime) Parameters deltaTime float"
  },
  "api/Kiwi.Utility.Singleton.ISingletonUpdate.html": {
    "href": "api/Kiwi.Utility.Singleton.ISingletonUpdate.html",
    "title": "Interface ISingletonUpdate | Kiwi Utility",
    "keywords": "Interface ISingletonUpdate Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll public interface ISingletonUpdate Methods SingletonUpdate(float) void SingletonUpdate(float deltaTime) Parameters deltaTime float"
  },
  "api/Kiwi.Utility.Singleton.MonoSingleton-1.html": {
    "href": "api/Kiwi.Utility.Singleton.MonoSingleton-1.html",
    "title": "Class MonoSingleton<T> | Kiwi Utility",
    "keywords": "Class MonoSingleton<T> Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll Mono 单例基类 public abstract class MonoSingleton<T> : MonoBehaviour, ISingleton, IDisposable where T : MonoSingleton<T> Type Parameters T 单例对象的类型 Inheritance object Object Component Behaviour MonoBehaviour MonoSingleton<T> Implements ISingleton IDisposable Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods KiwiExtend.ForceGetComponent(Component, string) KiwiExtend.ForceGetComponent(Component, string, out bool) KiwiExtend.ForceGetComponent(Component, Type) KiwiExtend.ForceGetComponent(Component, Type, out bool) KiwiExtend.ForceGetComponent<T>(Component) KiwiExtend.ForceGetComponent<T>(Component, out bool) KiwiExtend.rectTransform(Component) KiwiExtend.IsNull(Object) Properties Exists 实例是否存在 照理说单例不应该有这个判断,但是主要为了解决关闭 Unity 播放时, 刚好有组件在 OnDisable 或者 OnDestroy 中调用了单例, 导致引擎会报错的问题. public static bool Exists { get; } Property Value bool Instance 单例对象 public static T Instance { get; } Property Value T IsInitialized 单例初始化完成 public virtual bool IsInitialized { get; } Property Value bool canResetSingleton 单例是否可以被重置 public abstract bool canResetSingleton { get; } Property Value bool Methods GetInstance() 获得单例对象 public static T GetInstance() Returns T 当前运行时中的单例对象, 如果没有则创建单例对象. OnSingletonInitialize() 当单例初始化时调用 protected virtual void OnSingletonInitialize() OnSingletonRelease() 当单例释放时调用 protected virtual void OnSingletonRelease() OnSingletonReset() 当单例重制时调用 protected virtual void OnSingletonReset()"
  },
  "api/Kiwi.Utility.Singleton.Singleton-1.html": {
    "href": "api/Kiwi.Utility.Singleton.Singleton-1.html",
    "title": "Class Singleton<T> | Kiwi Utility",
    "keywords": "Class Singleton<T> Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll 单例基类 public abstract class Singleton<T> : ISingleton, IDisposable where T : Singleton<T>, new() Type Parameters T 单例对象的类型 Inheritance object Singleton<T> Implements ISingleton IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Singleton() 构造方法 protected Singleton() Properties Exists 实例是否存在 照理说单例不应该有这个判断,但是主要为了解决关闭 Unity 播放时, 刚好有组件在 OnDisable 或者 OnDestroy 中调用了单例, 导致引擎会报错的问题. public static bool Exists { get; } Property Value bool Instance 单例对象 public static T Instance { get; } Property Value T IsInitialized 单例初始化完成 public virtual bool IsInitialized { get; } Property Value bool canResetSingleton 单例是否可以被重置 public abstract bool canResetSingleton { get; } Property Value bool Methods GetInstance() 获得单例对象 public static T GetInstance() Returns T 当前运行时中的单例对象, 如果没有则创建单例对象. OnSingletonInitialize() 当单例初始化时调用 protected virtual void OnSingletonInitialize() OnSingletonRelease() 当单例释放时调用 protected virtual void OnSingletonRelease() OnSingletonReset() 当单例重制时调用 protected virtual void OnSingletonReset()"
  },
  "api/Kiwi.Utility.Singleton.SingletonInitializationStatus.html": {
    "href": "api/Kiwi.Utility.Singleton.SingletonInitializationStatus.html",
    "title": "Enum SingletonInitializationStatus | Kiwi Utility",
    "keywords": "Enum SingletonInitializationStatus Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll 单例初始化状态 public enum SingletonInitializationStatus Fields Initialized = 2 初始化完成 Initializing = 1 初始化中 None = 0 未初始化"
  },
  "api/Kiwi.Utility.Singleton.SingletonManager.Driver.html": {
    "href": "api/Kiwi.Utility.Singleton.SingletonManager.Driver.html",
    "title": "Class SingletonManager.Driver | Kiwi Utility",
    "keywords": "Class SingletonManager.Driver Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll 单例驱动器 public class SingletonManager.Driver : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SingletonManager.Driver Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods KiwiExtend.ForceGetComponent(Component, string) KiwiExtend.ForceGetComponent(Component, string, out bool) KiwiExtend.ForceGetComponent(Component, Type) KiwiExtend.ForceGetComponent(Component, Type, out bool) KiwiExtend.ForceGetComponent<T>(Component) KiwiExtend.ForceGetComponent<T>(Component, out bool) KiwiExtend.rectTransform(Component) KiwiExtend.IsNull(Object)"
  },
  "api/Kiwi.Utility.Singleton.SingletonManager.html": {
    "href": "api/Kiwi.Utility.Singleton.SingletonManager.html",
    "title": "Class SingletonManager | Kiwi Utility",
    "keywords": "Class SingletonManager Namespace Kiwi.Utility.Singleton Assembly com.kiwi.utility.runtime.dll 单例管理器 public static class SingletonManager Inheritance object SingletonManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMonoSingleton<T>() 获取 Mono 单例 public static T GetMonoSingleton<T>() where T : MonoBehaviour, ISingleton Returns T Type Parameters T GetSingleton<T>() 获取单例 public static T GetSingleton<T>() where T : class, ISingleton, new() Returns T Type Parameters T ReleaseAllSingletons() 释放所有单例 public static void ReleaseAllSingletons() ResetAllSingletons() 重置所有单例 public static void ResetAllSingletons() StartCoroutine(IEnumerator) 开启一个协程 public static Coroutine StartCoroutine(IEnumerator coroutine) Parameters coroutine IEnumerator Returns Coroutine StartCoroutine(string) 开启一个协程 public static Coroutine StartCoroutine(string methodName) Parameters methodName string Returns Coroutine StopAllCoroutines() 停止所有协程 public static void StopAllCoroutines() StopCoroutine(string) 停止一个协程 public static void StopCoroutine(string methodName) Parameters methodName string StopCoroutine(Coroutine) 停止一个协程 public static void StopCoroutine(Coroutine coroutine) Parameters coroutine Coroutine"
  },
  "api/Kiwi.Utility.Singleton.html": {
    "href": "api/Kiwi.Utility.Singleton.html",
    "title": "Namespace Kiwi.Utility.Singleton | Kiwi Utility",
    "keywords": "Namespace Kiwi.Utility.Singleton Classes MonoSingleton<T> Mono 单例基类 SingletonManager 单例管理器 SingletonManager.Driver 单例驱动器 Singleton<T> 单例基类 Interfaces ISingleton 单例接口 ISingletonFixedUpdate ISingletonLateUpdate ISingletonUpdate Enums SingletonInitializationStatus 单例初始化状态"
  },
  "api/Kiwi.Utility.Stopwatch.html": {
    "href": "api/Kiwi.Utility.Stopwatch.html",
    "title": "Class Stopwatch | Kiwi Utility",
    "keywords": "Class Stopwatch Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 码表工具 public class Stopwatch Inheritance object Stopwatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Stopwatch() public Stopwatch() Properties ElapseMilliseconds 用时(单位:毫秒) public long ElapseMilliseconds { get; } Property Value long Methods Refresh() 刷新 public void Refresh() Stop(bool, object) 停止 public void Stop(bool showElapsedTime = false, object userData = null) Parameters showElapsedTime bool 是否打印耗时 userData object 自定义数据"
  },
  "api/Kiwi.Utility.TimeUtility.CulturePreset.html": {
    "href": "api/Kiwi.Utility.TimeUtility.CulturePreset.html",
    "title": "Struct TimeUtility.CulturePreset | Kiwi Utility",
    "keywords": "Struct TimeUtility.CulturePreset Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 地区预设 public struct TimeUtility.CulturePreset Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties de_DE 德语（德国） public static CultureInfo de_DE { get; } Property Value CultureInfo en_US 美式英语 public static CultureInfo en_US { get; } Property Value CultureInfo fr_FR 法语（法国） public static CultureInfo fr_FR { get; } Property Value CultureInfo ja_JP 日语（日本） public static CultureInfo ja_JP { get; } Property Value CultureInfo ko_KR 韩语（韩国） public static CultureInfo ko_KR { get; } Property Value CultureInfo zh_CN 汉语（中国） public static CultureInfo zh_CN { get; } Property Value CultureInfo"
  },
  "api/Kiwi.Utility.TimeUtility.TimeUnit.html": {
    "href": "api/Kiwi.Utility.TimeUtility.TimeUnit.html",
    "title": "Enum TimeUtility.TimeUnit | Kiwi Utility",
    "keywords": "Enum TimeUtility.TimeUnit Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 时间单位 public enum TimeUtility.TimeUnit Fields Days = 1 Hours = 2 Milliseconds = 5 Minutes = 3 Months = 0 Seconds = 4"
  },
  "api/Kiwi.Utility.TimeUtility.html": {
    "href": "api/Kiwi.Utility.TimeUtility.html",
    "title": "Class TimeUtility | Kiwi Utility",
    "keywords": "Class TimeUtility Namespace Kiwi.Utility Assembly com.kiwi.utility.runtime.dll 时间工具集 public static class TimeUtility Inheritance object TimeUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UnixTime Unix 纪元时间 1970 年 01 月 01 日 0 时 0 分 0 秒 public static DateTime UnixTime { get; } Property Value DateTime Methods AddDays(DateTime, int) 将日期加上指定天数 public static DateTime AddDays(DateTime dateTime, int days) Parameters dateTime DateTime 起始日期 days int 附加天数 Returns DateTime 加上指定天数的日期 AddHours(DateTime, int) 将日期加上指定小时 public static DateTime AddHours(DateTime dateTime, int hours) Parameters dateTime DateTime 起始日期 hours int 附加小时数 Returns DateTime 加上指定小时数的日期 AddMilliseconds(DateTime, int) 将日期加上指定毫秒数 public static DateTime AddMilliseconds(DateTime dateTime, int milliseconds) Parameters dateTime DateTime 起始日期 milliseconds int 附加毫秒数 Returns DateTime 加上指定毫秒数的日期 AddMinutes(DateTime, int) 将日期加上指定分钟 public static DateTime AddMinutes(DateTime dateTime, int minutes) Parameters dateTime DateTime 起始日期 minutes int 附加分钟数 Returns DateTime 加上指定分钟数的日期 AddSeconds(DateTime, int) 将日期加上指定秒数 public static DateTime AddSeconds(DateTime dateTime, int seconds) Parameters dateTime DateTime 起始日期 seconds int 附加秒数 Returns DateTime 加上指定秒数的日期 ConvertDateTimeToUnixTimestamp(DateTime) 将 DateTime 转换为 Unix 时间戳 单位 : 秒 public static long ConvertDateTimeToUnixTimestamp(DateTime dateTime) Parameters dateTime DateTime 要转换的时间 Returns long 转换后的秒级 Unix 时间戳 ConvertDateTimeToUnixTimestampMilliseconds(DateTime) 将 DateTime 转换为 Unix 时间戳 单位 : 秒 public static long ConvertDateTimeToUnixTimestampMilliseconds(DateTime dateTime) Parameters dateTime DateTime 要转换的时间 Returns long 转换后的秒级 Unix 时间戳 ConvertLocalToUtc(DateTime) 将本地时间转换为 UTC 时间 public static DateTime ConvertLocalToUtc(DateTime localTime) Parameters localTime DateTime 要转换的本地时间 Returns DateTime 转换后的 UTC 时间 ConvertToTimeZone(DateTime, string) 将时间转换为特定时区时间 public static DateTime ConvertToTimeZone(DateTime dateTime, string timeZoneId) Parameters dateTime DateTime 要转换的时间 timeZoneId string 时区 ID Returns DateTime 转换为特定时区后的时间 Remarks 可以使用一下代码查看 timeZoneId 的值 foreach (var timezone in TimeZoneInfo.GetSystemTimeZones()) { Debug.Log(timezone.Id + \" | \" + timezone.DisplayName); } ConvertUnixTimestampToDateTime(long, bool) 将 Unix 时间戳转换为 DateTime public static DateTime ConvertUnixTimestampToDateTime(long timestamp, bool isMilliseconds = false) Parameters timestamp long Unix 时间戳 isMilliseconds bool 时间戳是否为毫秒级 Returns DateTime 转换后的时间 ConvertUtcToLocal(DateTime) 将 UTC 时间转换为本地时间 public static DateTime ConvertUtcToLocal(DateTime utcTime) Parameters utcTime DateTime 要转换的 UTC 时间 Returns DateTime 转换后的本地时间 FormatDateTime(DateTime, CultureInfo, string) 格式化日期为字符串 public static string FormatDateTime(DateTime dateTime, CultureInfo cultureInfo, string format = \"yyyy-MM-dd HH:mm:ss\") Parameters dateTime DateTime 时间日期 cultureInfo CultureInfo 地区,参考TimeUtility.CulturePreset format string 格式,参考FormatDateTime(DateTime, string) Returns string 格式化后的时间字符串 FormatDateTime(DateTime, string) 格式化日期为字符串 public static string FormatDateTime(DateTime dateTime, string format = \"yyyy-MM-dd HH:mm:ss\") Parameters dateTime DateTime 时间日期 format string 格式,参考 example Returns string 格式化后的时间字符串 Examples 格式示例 : \"s\" = 2008-04-18T06:30:00 (sortable) \"d\" = 04/18/2008 (short date) \"g\" = 04/18/2008 06:30 (general short) \"f\" = Friday, 18 April 2008 06:30 (full date short) \"t\" = 2008-04-18T06:30:00 (short time) \"u\" = 2008-4-18 06:30:00Z (universal sortable) \"D\" = Friday, 18 April 2008 (long date) \"F\" = Friday, 18 April 2008 06:30:00 (full date long) \"G\" = 04/18/2008 06:30:00 (general long) \"M\" = April 18 (month) \"O\" = 2008-04-18T06:30:00.0000000 (ISO 8601) \"R\" = Fri, 18 Apr 2008 06:30:00 GMT (RFC 1123) \"T\" = 06:30:00(long time) \"U\" = Thursday, 17 April 2008 22:30:00(universal full) \"Y\" = 2008 April (year month) \"dddd\" = Friday (custom) \"M/d/yy\" = 4/18/08 (custom) \"h:mm:ss tt zz\" = 4:03:05 PM -07 (custom) \"hh:mm:ss t z\" = 04:03:05 P -7 (custom) \"yyyy-M-d dddd\" = 2008-4-18 Friday (custom) \"HH:m:s zzz\" = 16:3:5 -07:00 (custom) \"HH:mm:ss zz\" = 16:03:05 -07 (custom) \"MM/dd/yyyy\" = 04/18/2008 (custom) \"yy-MM-dd\" = 08-04-18 (custom) \"yy-MMM-dd ddd\" = 08-Apr-18 Fri (custom) \"yyyy MMMM dd\" = 2008 April 18 (custom) FormatMilliseconds(int, string) 格式化毫秒为字符串 public static string FormatMilliseconds(int milliseconds, string format = \"HH:mm:ss\") Parameters milliseconds int 毫秒 format string 格式,参考FormatDateTime(DateTime, string) Returns string 格式化后的时间字符串 FormatSeconds(int, string) 格式化秒数为字符串 public static string FormatSeconds(int seconds, string format = \"HH:mm:ss\") Parameters seconds int 秒数 format string 格式,参考FormatDateTime(DateTime, string) Returns string 格式化后的时间字符串 GetCurrentLocalTime() 获取当前本地时间 public static DateTime GetCurrentLocalTime() Returns DateTime 当前本地时间 GetCurrentUtcTime() 获取当前 UTC 时间 public static DateTime GetCurrentUtcTime() Returns DateTime 当前 UTC 时间 GetDaysDifference(DateTime, DateTime) 获取两个日期之间的天数差 public static int GetDaysDifference(DateTime startDate, DateTime endDate) Parameters startDate DateTime 开始日期 endDate DateTime 结束日期 Returns int 两个日期之间的天数差 GetHoursDifference(DateTime, DateTime) 获取两个日期之间的小时差 public static int GetHoursDifference(DateTime startDate, DateTime endDate) Parameters startDate DateTime 开始日期 endDate DateTime 结束日期 Returns int 两个日期之间的小时差 GetLocalTimeZone() 获取当前系统时区 public static TimeZoneInfo GetLocalTimeZone() Returns TimeZoneInfo 当前系统所在时区 GetMillisecondsDifference(DateTime, DateTime) 获取两个日期之间的毫秒差 public static int GetMillisecondsDifference(DateTime startDate, DateTime endDate) Parameters startDate DateTime 开始日期 endDate DateTime 结束日期 Returns int 两个日期之间的毫秒差 GetMinutesDifference(DateTime, DateTime) 获取两个日期之间的分钟差 public static int GetMinutesDifference(DateTime startDate, DateTime endDate) Parameters startDate DateTime 开始日期 endDate DateTime 结束日期 Returns int 两个日期之间的分钟差 GetNextDays(DateTime, int) 获取指定时间 N 天之后的时间 public static DateTime GetNextDays(DateTime currentTime, int days = 1) Parameters currentTime DateTime 当前时间 days int 天数 Returns DateTime 指定时间 N 天之后的时间 GetNextHours(DateTime, int) 获取指定时间 N 小时之后的时间 public static DateTime GetNextHours(DateTime currentTime, int hours) Parameters currentTime DateTime 当前时间 hours int 小时 Returns DateTime 指定时间 N 小时之后的时间 GetNextMilliseconds(DateTime, int) 获取指定时间 N 毫秒之后的时间 public static DateTime GetNextMilliseconds(DateTime currentTime, int milliseconds) Parameters currentTime DateTime 当前时间 milliseconds int 毫秒 Returns DateTime 指定时间 N 毫秒之后的时间 GetNextMinutes(DateTime, int) 获取指定时间 N 分钟之后的时间 public static DateTime GetNextMinutes(DateTime currentTime, int minutes) Parameters currentTime DateTime 当前时间 minutes int 分钟 Returns DateTime 指定时间 N 分钟之后的时间 GetNextMonths(DateTime, int) 获取指定时间 N 月之后的时间 public static DateTime GetNextMonths(DateTime currentTime, int months = 1) Parameters currentTime DateTime 当前时间 months int 月 Returns DateTime 指定时间 N 月之后的时间 GetNextSeconds(DateTime, int) 获取指定时间 N 秒数之后的时间 public static DateTime GetNextSeconds(DateTime currentTime, int seconds) Parameters currentTime DateTime 当前时间 seconds int 秒数 Returns DateTime 指定时间 N 秒数之后的时间 GetNextTime(DateTime, TimeUnit, int) 获取指定时间 N 时间单位之后的时间 public static DateTime GetNextTime(DateTime currentTime, TimeUtility.TimeUnit timeUnit, int value) Parameters currentTime DateTime 当前时间 timeUnit TimeUtility.TimeUnit 时间单位 value int 增加的时间单位值 Returns DateTime 指定时间 N 时间单位之后的时间 GetSecondsDifference(DateTime, DateTime) 获取两个日期之间的秒数差 public static int GetSecondsDifference(DateTime startDate, DateTime endDate) Parameters startDate DateTime 开始日期 endDate DateTime 结束日期 Returns int 两个日期之间的秒数差 GetTimeZoneOffset(TimeZoneInfo, DateTime) 获取时区偏移量 public static TimeSpan GetTimeZoneOffset(TimeZoneInfo timeZone, DateTime dateTime) Parameters timeZone TimeZoneInfo 时区 dateTime DateTime 目标时间 Returns TimeSpan 目标时间相对指定时区的偏移量 GetUnixTimestamp(bool) 获取 Unix 时间戳 单位 : 秒 public static long GetUnixTimestamp(bool isMilliseconds = false) Parameters isMilliseconds bool 是否返回毫秒级时间戳 Returns long Unix 时间戳 GetWeekOfYear(DateTime, DayOfWeek) 获取时间为一年中的第几周 public static int GetWeekOfYear(DateTime dateTime, DayOfWeek firstDayOfWeek = DayOfWeek.Monday) Parameters dateTime DateTime 目标时间 firstDayOfWeek DayOfWeek 一周的第一天为星期几 Returns int 时间为一年中的第几周 IsAcrossDay(DateTime, DateTime) 判断两个时间是否跨天 public static bool IsAcrossDay(DateTime dateTime1, DateTime dateTime2) Parameters dateTime1 DateTime 时间 1 dateTime2 DateTime 时间 2 Returns bool 两个时间是否跨天 IsAcrossMonth(DateTime, DateTime) 判断两个时间是否跨月 public static bool IsAcrossMonth(DateTime dateTime1, DateTime dateTime2) Parameters dateTime1 DateTime 时间 1 dateTime2 DateTime 时间 2 Returns bool 两个时间是否跨月 IsAcrossWeek(DateTime, DateTime) 判断两个时间是否跨星期 public static bool IsAcrossWeek(DateTime dateTime1, DateTime dateTime2) Parameters dateTime1 DateTime 时间 1 dateTime2 DateTime 时间 2 Returns bool 两个时间是否跨星期 Remarks 原理就是判断两个日期在同一周内的第一天（星期一）是否是同一天 IsAcrossYear(DateTime, DateTime) 判断两个时间是否跨年 public static bool IsAcrossYear(DateTime dateTime1, DateTime dateTime2) Parameters dateTime1 DateTime 时间 1 dateTime2 DateTime 时间 2 Returns bool 两个时间是否跨年 IsLeapYear(int) 判断指定年份是否是闰年 public static bool IsLeapYear(int year) Parameters year int 年份 Returns bool 指定年份是否是闰年 IsSameDay(DateTime, DateTime) 判断两个时间是否为同一天 public static bool IsSameDay(DateTime dateTime1, DateTime dateTime2) Parameters dateTime1 DateTime 时间 1 dateTime2 DateTime 时间 2 Returns bool 两个时间是否为同一天 IsTimeInRange(DateTime, DateTime, DateTime) 判断当前时间是否在两个时间范围内 public static bool IsTimeInRange(DateTime time, DateTime startTime, DateTime endTime) Parameters time DateTime 当前时间 startTime DateTime 开始时间 endTime DateTime 结束时间 Returns bool 当前时间是否在两个时间范围内 IsWeekend(DateTime) 判断指定时间是否是周末 public static bool IsWeekend(DateTime dateTime) Parameters dateTime DateTime 时间 Returns bool 指定时间是否是周末 ParseDateTime(string, string) 从字符串解析日期 public static DateTime ParseDateTime(string dateTimeStr, string format = \"yyyy-MM-dd HH:mm:ss\") Parameters dateTimeStr string 时间日期字符串 format string 格式,参考FormatDateTime(DateTime, string) Returns DateTime 根据字符解析到的时间日期"
  },
  "api/Kiwi.Utility.html": {
    "href": "api/Kiwi.Utility.html",
    "title": "Namespace Kiwi.Utility | Kiwi Utility",
    "keywords": "Namespace Kiwi.Utility Classes KiwiExtend RectTransform 类方法扩展 KiwiMath 数学公式类 KiwiPath 路径工具 SetPropertyUtility 属性设置工具集 Stopwatch 码表工具 TimeUtility 时间工具集 Structs TimeUtility.CulturePreset 地区预设 Enums AnchorHorizontal 水平锚点枚举 AnchorPresets 锚点预设枚举 AnchorVertical 垂直锚点枚举 PivotPresets 重点点预设枚举 TimeUtility.TimeUnit 时间单位"
  },
  "index.html": {
    "href": "index.html",
    "title": "Kiwi 工具集 | Kiwi Utility",
    "keywords": "Kiwi 工具集"
  },
  "manual/EditorIconsBrowser 使用说明.html": {
    "href": "manual/EditorIconsBrowser 使用说明.html",
    "title": "| Kiwi Utility",
    "keywords": "Editor Icons Browser 使用说明 说明 工具用于查看 Unity 中内置的图标, 支持保存图标图片到本地."
  },
  "manual/EditorToolbarExtender 使用说明.html": {
    "href": "manual/EditorToolbarExtender 使用说明.html",
    "title": "| Kiwi Utility",
    "keywords": "Editor Toolbar Extender 使用说明 说明 工具用于扩展 Unity Editor 的工具栏 , 方便添加自定义的按钮或功能. 使用属性标签可以快速实现 参数说明 序号 参数名 说明 1 Category 按钮名称 2 Position GUI要绘制的位置,EditorToolbarAttribute.Anchor中的4个枚举值对应图中的4个区域 1.工具栏左侧区域 - EditorToolbarAttribute.Anchor.Left 2.播放按钮左侧区域 - EditorToolbarAttribute.Anchor.CenterLeft 3.播放按钮右侧区域 - EditorToolbarAttribute.Anchor.CenterRight 4.工具栏右侧区域 - EditorToolbarAttribute.Anchor.Right 3 Path 如果是下拉菜单,填入菜单路径,如果只是按钮,无需填写 5 Custom 如果传入True,则为自定义GUI方法 6 Order 排序 示例 // 自定义 GUI // 设置位置, 并标记 custom 为 true, 其他字段默认 [ EditorToolbarMenu(anchor : EditorToolbarMenuAttribute.Anchor.Left , custom : true , order : 10) ] public static void OnToolbarGUI() { value = GUILayout.HorizontalSlider(value , 0 , 10 , GUILayout.Width(100)); } // 下拉菜单 // 设置位置, 设置 category 即下拉菜单按钮显示的文字, 并且设置 path 即实际响应按钮在下拉菜单中的层级 [ EditorToolbarMenu(anchor : EditorToolbarMenuAttribute.Anchor.Right , category : \"工具\" , path : \"PrefabPrefs 浏览器\") ] public static void ShowExample() { var window = GetWindow<PlayerPrefsBrowser>(); window.titleContent = new(\"PrefabPrefs 浏览器\"); } // 按钮 // 设置位置, 设置 category 即按钮显示的文字 [EditorToolbarMenu(anchor : EditorToolbarMenuAttribute.Anchor.CenterRight , category : \"Editor Icons 浏览器\") ] public static void ShowExample2() { var window = CreateWindow<EditorIconsBrowser>(\"Editor Icons 浏览器\"); window.ShowUtility(); window.minSize = new(550 , 450); }"
  },
  "manual/PlayerPrefsBrowser 使用说明.html": {
    "href": "manual/PlayerPrefsBrowser 使用说明.html",
    "title": "| Kiwi Utility",
    "keywords": "PlayerPrefsBrowser 使用说明 说明 用于查看项目运行时和仅编辑器模式下的注册表信息. 使用说明 点击左上角按钮, 切换运行时还是仅编辑器模式, 相当于代码调用的是 PlayerPrefs 还是 EditorPrefs. 点击放大镜图标, 显示搜索针对Key还是Value. 清除按钮会清除当前列表中的所有注册表数据, 刷新按钮会刷新当前列表, 显示最新的注册表信息. 新建按钮会打开新建面板, 输入 Key 和 Value 值, 点击确定会创建相应注册表信息."
  },
  "manual/PreviewEditor 使用说明.html": {
    "href": "manual/PreviewEditor 使用说明.html",
    "title": "| Kiwi Utility",
    "keywords": "Preview Editor 使用说明 说明 用于进行模型预览, 支持预览画面的移动/缩放/旋转, 通过扩展 Module 支持动画播放/显示骨骼等一系列自定义功能, 可以将此 Editor 嵌套入自己的 CustomEditorWindow 中. 使用方法 在 EditorWindow 中定义 AvatarEditor 对象, 添加需要的 Module. private void OnEnable() { _avatarEditor = new(this); // 添加动画播放模块 _avatarEditor.AddModule<PreviewAnimationModule>(); // 添加骨骼列表模块 _avatarEditor.AddModule<ModelBonesModule>(); } 分别在 EditorWindow 的 Update 方法和 OnGUI 方法调用 AvatarEditor 的 Update 方法和 Draw 方法. private void Update() { _avatarEditor?.Update(); } private void OnGUI() { _avatarEditor.Draw(position); } 在EditorWindow 销毁时, 调用 AvatarEditor 的 Dispose 方法进行释放. private void OnDestroy() { _avatarEditor.Dispose(); } 可以参考 PreviewEditorWindow.cs 如果需要添加自己的 Module , 只要自己的 Module 继承 IPreviewModule 接口, 调用 AvatarEditor.AddModule 进行添加即可. 可以参考 PreviewAnimationModule.cs"
  },
  "manual/introduction.html": {
    "href": "manual/introduction.html",
    "title": "| Kiwi Utility",
    "keywords": ""
  }
}